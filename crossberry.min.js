
    // Loader helpers
    function loadScript(url) {
      return new Promise((resolve, reject) => {
        const script = document.createElement("script");
        script.src = url;
        script.async = true;
        script.onload = resolve;
        script.onerror = reject;
        document.head.appendChild(script);
      });
    }

    function loadStyle(url) {
      return new Promise((resolve, reject) => {
        const link = document.createElement("link");
        link.rel = "stylesheet";
        link.href = url;
        link.onload = resolve;
        link.onerror = reject;
        document.head.appendChild(link);
      });
    }

    async function init() {
      try {
        // Load styles
        await loadStyle("https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css");
        await loadStyle("https://cbjs.vercel.app/crossberry.min.css");
        console.log("CSS loaded");

        // Load scripts
        await loadScript("https://code.jquery.com/jquery-3.6.0.min.js");
        console.log("jQuery loaded");

        await loadScript("https://code.jquery.com/ui/1.13.2/jquery-ui.min.js");
        console.log("jQuery UI loaded");

        await loadScript("https://cbjs.vercel.app/crossberry.min.js");
        console.log("CrossBerry loaded");

        // Now run your logic
        $(function() {
          // Toggle boxes
          $(".hid").on("click", function(e) {
            e.stopPropagation();
            let targetId = $(this).data("hidden");
            $(".box").not("#" + targetId).addClass("hidden");
            $("#" + targetId).toggleClass("hidden");
          });

          $(".box").on("click", function(e) {
            e.stopPropagation();
          });

          $(document).on("click", function() {
            $(".box").addClass("hidden");
          });

          // jQuery UI Tabs
          $("#tabs").tabs();
        });
      } catch (err) {
        console.error("Load error:", err);
      }
    }

    init();
